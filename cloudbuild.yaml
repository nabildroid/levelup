steps:
  - name: gcr.io/cloud-builders/wget
    id: firebase
    args:
      - "--quiet"
      - "-O"
      - firebase
      - "https://firebase.tools/bin/linux/latest"

  - name: gcr.io/cloud-builders/npm
    id: install
    args:
      - i
    dir: functions
    waitFor:
      - firebase

  - name: gcr.io/cloud-builders/npm
    id: build
    args:
      - run
      - build
    dir: functions
    waitFor:
      - install

  - name: gcr.io/$PROJECT_ID/firebase
    id: e2e testing
    entrypoint: npm
    args:
      - run
      - emulators-test-e2e
    secretEnv: ['NOTION_TOKEN', 'TODOIST_TOKEN']
    dir: functions
    waitFor:
      - build

  - name: node
    id: deploy
    waitFor:
      - "e2e testing"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        chmod a+x ./firebase
        ./firebase deploy --only functions

  - name: gcr.io/cloud-builders/gcloud
    id: configure
    waitFor:
      - "deploy"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        apt update && apt install jq -y 
        chmod a+x ./scripts/setupFunctions.sh
        ./scripts/setupFunctions.sh

  - name: gcr.io/cloud-builders/npm
    id: "generate dependency graph"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        apt update && apt-get install graphviz -y 
        npm i -g madge
        madge functions/src/** -i dependency.png
  
  - name: gcr.io/cloud-builders/gsutil
    id: "upload dependency graph"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gsutil mv dependency.png gs://$PROJECT_ID.appspot.com/deployment
        gsutil acl ch -u AllUsers:R  gs://levelup-automation.appspot.com/deployment/dependency.png

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_NUMBER/secrets/NOTION_TOKEN/versions/1
    env: 'NOTION_TOKEN'
  - versionName: projects/$PROJECT_NUMBER/secrets/TODOIST_TOKEN/versions/1
    env: 'TODOIST_TOKEN'
